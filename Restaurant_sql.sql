
SELECT *
from Sales;

--average transaction amount per order
SELECT
    SUM(transaction_amount) AS Total_revenue,
    AVG(transaction_amount) AS avg_spent,
	MAX(transaction_amount) AS max_spent,
	MIN(transaction_amount) AS min_spent
FROM Sales;  


-- total revenue generated by each menu item
SELECT 
   SUM(transaction_amount) AS Total_revenue,
   menu
FROM Sales
GROUP BY menu
ORDER BY Total_revenue DESC;

-- total quantity sold of each menu item--
SELECT
    SUM(quantity) AS  Total_quantity,
	menu
FROM Sales
GROUP BY menu
ORDER BY Total_quantity DESC;

--Total revenue by Category--
SELECT 
   SUM(transaction_amount) AS Total_revenue,
   category
FROM Sales
GROUP BY category
ORDER BY Total_revenue;

-- Total Revenue by transaction type --
SELECT 
   SUM(transaction_amount) AS Total_revenue,
   transaction_type 
FROM Sales
GROUP BY transaction_type
ORDER BY Total_revenue DESC;

--Total revenue by staff_gender --
SELECT 
   SUM(transaction_amount) AS Total_revenue,
   received_by 
FROM Sales
GROUP BY received_by 
ORDER BY Total_revenue DESC;


--Total revenue by Time_of_sales--
SELECT 
   SUM(transaction_amount) AS Total_revenue,
   time_of_sale 
FROM Sales
GROUP BY time_of_sale
ORDER BY Total_revenue DESC;

--percentage of total transactions by transaction_type
SELECT 
   ROUND(SUM(transaction_amount) * 100.0 / (SELECT SUM(transaction_amount) FROM Sales), 2) AS percent_revenue,
   transaction_type 
FROM Sales
GROUP BY transaction_type
ORDER BY percent_revenue;

--percentage of total transactions by staff gender
SELECT 
   ROUND(SUM(transaction_amount) * 100.0 / (SELECT SUM(transaction_amount) FROM Sales), 2) AS percent_revenue,
   received_by 
FROM Sales
GROUP BY received_by
ORDER BY percent_revenue;

--percentage of total transactions by time of sale
SELECT 
   ROUND(SUM(transaction_amount) * 100.0 / (SELECT SUM(transaction_amount) FROM Sales), 2) AS percent_revenue,
   time_of_sale
FROM Sales
GROUP BY time_of_sale
ORDER BY percent_revenue DESC;


--numbers of order greater than average spend--
SELECT 
    COUNT(order_id) AS order_count
FROM Sales
WHERE transaction_amount > (SELECT AVG(transaction_amount) 
FROM Sales);

-- time of day when cash transactions are more common--
SELECT TOP(2)
           time_of_sale, 
           COUNT(*) AS cash_transaction_count
FROM Sales
WHERE transaction_type = 'Cash'
GROUP BY time_of_sale
ORDER BY cash_transaction_count DESC;

-- time of day when online transactions are more common--
SELECT TOP(2)
            time_of_sale, 
            COUNT(*) AS online_transaction_count
FROM Sales
WHERE transaction_type = 'Online'
GROUP BY time_of_sale
ORDER BY online_transaction_count DESC;


--Total revenue generated by male staff by transaction_type--
SELECT 
    SUM(transaction_amount) AS Total_revenue,
	transaction_type,
	received_by
FROM Sales
WHERE received_by = 'Male'
GROUP BY transaction_type, received_by
ORDER BY Total_revenue DESC;

--total number of orders processed by female staff categorized by transaction type --
SELECT 
    COUNT(DISTINCT order_id) AS Total_orders,
	transaction_type,
	received_by
FROM Sales
WHERE received_by = 'Female' 
GROUP BY transaction_type, received_by
ORDER BY Total_orders DESC;

-- cheapest item on the menu
SELECT
    menu,
    MIN(item_price) AS cheapest_item_price
FROM Sales
GROUP BY menu
HAVING MIN(item_price) = (SELECT MIN(item_price) FROM Sales);

-- most expensive item on the menu
SELECT
    menu,
    MAX(item_price) AS most_expensive_item_price
FROM Sales
GROUP BY menu
HAVING MAX(item_price) = (SELECT MAX(item_price) FROM Sales);

-- total revenue in year 2022 and 2023 where transaction amount is between 300 and 500
SELECT
     SUM(transaction_amount) AS Total_revenue,
	 order_year
FROM Sales
WHERE order_year IN (2022, 2023) AND
transaction_amount BETWEEN 300 AND 500
GROUP BY order_year
ORDER BY Total_revenue DESC;

-- total order and quantity where the time of sale is Morning , category is Beverages
--and transaction_amount between 150 and max of transaction_amount 
SELECT 
    COUNT([order_id]) AS total_order,
	SUM(quantity) AS total_quantity
FROM 
    Sales
WHERE 
    time_of_sale = 'Morning' 
    AND category = 'Beverages'
    AND transaction_amount BETWEEN 150 AND (SELECT MAX(transaction_amount) FROM Sales);

--create order_day, order_month and order_year from the date column
ALTER TABLE Sales
ADD order_day VARCHAR(3)

UPDATE Sales
SET order_day = LEFT(DATENAME(dw, date), 3);

ALTER TABLE Sales
ADD order_month VARCHAR(3)

UPDATE Sales
SET order_month = LEFT(DATENAME(month, date), 3);

ALTER TABLE Sales
ADD order_year INT

UPDATE Sales
SET order_year = DATENAME(yy, date);

-- total revenue by order year
SELECT
     SUM(transaction_amount) AS Total_revenue,
	 order_year
FROM Sales
GROUP BY order_year
ORDER BY Total_revenue DESC;

-- total revenue by order date in 2022
SELECT TOP(2)
    SUM(quantity) AS Total_quantity,
    order_day
FROM [dbo].[Sales]
WHERE order_year = 2022
GROUP BY order_day
ORDER BY Total_quantity DESC;

-- total revenue by order date in 2023
SELECT
    SUM(transaction_amount) AS Total_revenue,
    order_day
FROM Sales
WHERE order_year = 2023
GROUP BY order_day
ORDER BY Total_revenue DESC;

-- total revenue by order date in 2022
SELECT TOP(5)
    SUM(transaction_amount) AS Total_revenue,
    order_month
FROM Sales
WHERE order_year = 2022
GROUP BY order_month
ORDER BY Total_revenue DESC;

-- total revenue by order date in 2023
SELECT TOP(5)
    SUM(transaction_amount) AS Total_revenue,
    order_month
FROM Sales
WHERE order_year = 2023
GROUP BY order_month
ORDER BY Total_revenue DESC;